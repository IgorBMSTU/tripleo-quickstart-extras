#!/bin/bash

set -eux

### --start_docs
## Prepare the undercloud for deploying the containerized compute node
## ===================================================================

## .. note:: In progress documentation is available at https://etherpad.openstack.org/p/tripleo-containers-work
## ::

## Prepare Your Environment
## ------------------------

## * Add an additional insecure registry if needed
{% if additional_insecure_registry|bool %}
if egrep -q "^INSECURE_REGISTRY=.*{{docker_registry_host}}.*" /etc/sysconfig/docker; then
    echo "/etc/sysconfig/docker contains the correct settings"
else
    echo "updating /etc/sysconfig/docker for internal registry"
    sudo sed -i -e "s/^INSECURE_REGISTRY=\"\(.*\)\"/INSECURE_REGISTRY=\"\1 --insecure-registry {{ docker_registry_host }}\"/g" /etc/sysconfig/docker
    sudo systemctl restart docker
fi
{% endif %}

## * get build id
## ::
{% if get_build_command is defined: %}
BUILD_ID={{ get_build_command }}
{% else %}
BUILD_ID={{ docker_image_tag }}
{% endif %}

## * Populate the docker registry
## ::

openstack overcloud container image prepare \
    --images-file {{ working_dir }}/overcloud_containers.yaml \
    {{ prepare_service_env_args }} \
    --namespace {{ docker_registry_host }}/{{ docker_registry_namespace }} \
    --tag $BUILD_ID \
{% if docker_prep_prefix is defined %}
    --prefix {{ docker_prep_prefix}} \
{% endif %}
{% if docker_prep_suffix is defined %}
    --suffix {{ docker_prep_suffix }} \
{% endif %}
{% if docker_ceph_namespace is defined %}
    --set ceph_namespace={{ docker_ceph_namespace }} \
{% endif %}
{% if docker_ceph_image is defined %}
    --set ceph_image={{ docker_ceph_image }} \
{% endif %}
{% if docker_ceph_tag is defined %}
    --set ceph_tag={{ docker_ceph_tag }} \
{% endif %}
    --push-destination {{ local_docker_registry_host }}:8787

openstack overcloud container image upload --verbose --config-file {{ working_dir }}/overcloud_containers.yaml

## * Configure the {{ working_dir }}/containers-default-parameters.yaml, this is done automatically.
## ::

openstack overcloud container image prepare \
    --images-file {{ working_dir }}/overcloud_containers.yaml \
    --env-file {{ working_dir }}/containers-default-parameters.yaml \
    {{ prepare_service_env_args }} \
    --namespace {{ local_docker_registry_host }}:8787/{{ docker_registry_namespace }} \
{% if docker_prep_prefix is defined %}
    --prefix={{ docker_prep_prefix}} \
{% endif %}
{% if docker_prep_suffix is defined %}
    --suffix={{ docker_prep_suffix }} \
{% endif %}
{% if docker_ceph_namespace is defined %}
    --set ceph_namespace={{ docker_ceph_namespace }} \
{% endif %}
{% if docker_ceph_image is defined %}
    --set ceph_image={{ docker_ceph_image }} \
{% endif %}
{% if docker_ceph_tag is defined %}
    --set ceph_tag={{ docker_ceph_tag }} \
{% endif %}
    --tag $BUILD_ID

{% if update_containers|bool %}
# See https://github.com/imain/container-check for script and documentation

## * rename the base-os yum repos to disable them. This will speed up the update
## ::
CENTOS_REPOS=$(find /etc/yum.repos.d -type f -name "CentOS-*.repo" -o -name "quickstart-centos-*.repo" ! -name quickstart-centos-base.repo )
for f in $CENTOS_REPOS ; do
    sudo mv "$f" "$f"_disabled
done
yum clean all
yum repolist

## * update the containers with yum updates from OpenStack repos.  ( delorean-current, dependent patches built by DLRN )
## ::

# do not update ceph
cat overcloud_containers.yaml | grep -v ceph > containers_update.yaml
container-check -c {{ working_dir }}/containers_update.yaml -u -p {{ container_process_count }}

## * re-enable the base-os yum repos.
## ::
DISABLED_REPOS=$(find /etc/yum.repos.d -type f -name "*.repo_disabled")
for f in $DISABLED_REPOS ; do
    sudo mv -- "$f" "${f%.repo_disabled}.repo"
done
yum clean all
yum repolist
{% endif %}

echo "============================="
echo "Containers default parameters:"
cat {{ working_dir }}/containers-default-parameters.yaml
echo "============================="

## * Get the journal logs for docker
## ::

sudo journalctl -u docker > docker_journalctl.log

### --stop_docs
