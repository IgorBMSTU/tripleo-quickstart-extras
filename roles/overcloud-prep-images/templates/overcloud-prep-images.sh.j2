#!/bin/bash

set -eux

### --start_docs
## Prepare images for deploying the overcloud
## ==========================================

## Prepare Your Environment
## ------------------------

## * Source in the undercloud credentials.
## ::

source {{ working_dir }}/stackrc

{% if step_overcloud_image|bool %}

## * Upload images to glance.
## ::

openstack overcloud image upload {% if bash_deploy_ramdisk %}--old-deploy-image{% endif %} {% if whole_disk_images|bool %}--whole-disk{% endif %}

{% endif %}

{% if step_glance_upload|bool %}

## * Upload images to glance, this step is specific to nodepool based deployments.
## ::

    glance image-create --container-format bare \
        --disk-format qcow2 \
        --name overcloud-full \
        --file overcloud-full.qcow2

{% endif %}


## .. note:: Workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1391602
## ::

sudo systemctl restart openstack-ironic-conductor && sleep 30

{% if step_register|bool %}

## * Register nodes with Ironic.
## ::

openstack baremetal import --json instackenv.json
openstack baremetal configure boot

{% endif %}

{% if step_root_device_size|bool %}

## * Get nodes UUID
## ::

export items="$( ironic node-list | awk '/power/ {print $2}' )"

## * Find disk size from instackenv.json
## ::

export DISK_SIZE="$( jq '.["nodes"][]["disk"] | tonumber' instackenv.json )"

## * Update nodes with disk size hint
## ::

count=0
ARRAY_DISK_SIZE=($(echo $DISK_SIZE))
ROOT_DEVICE_SIZE={{ disk_root_device_size }}
for item in $items; do
    if  [ $ROOT_DEVICE_SIZE -ge ${ARRAY_DISK_SIZE[$count]} ]; then
        declare i ADS
        ADS=${ARRAY_DISK_SIZE[$count]}
        ironic node-update $item add properties/root_device='{"size": '$ADS'}'
    fi
    count=$((count+1))
done

# Temporary step to avoid introspection failure
# Workaround for: https://bugs.launchpad.net/tripleo/+bug/1649350
sudo mistral-db-manage populate

{% endif %}

{% if step_root_device_hints|bool %}
## * Get nodes UUID
## ::

export ironic_nodes="$( ironic node-list | awk '/power/ {print $2}' )"

for ironic_node in $ironic_nodes; do
    # extract IP from ironic node details
    ip_address=$(ironic node-show $ironic_node --fields driver_info | sed -n "s/.*ipmi_address': u'\([0-9\.]*\)'.*/\1/p")

    # get information for the matching template
    {% for node in root_device_hints %}
        NODE_IP="{{ node['ip'] }}"
        if [ "$NODE_IP" == "$ip_address" ]; then
            # set property
            ironic node-update $ironic_node add properties/root_device='{"{{ node['key'] }}": "{{ node['value'] }}"}'
        fi
    {% endfor %}
done

# Temporary step to avoid introspection failure
# Workaround for: https://bugs.launchpad.net/tripleo/+bug/1649350
sudo mistral-db-manage populate

{% endif %}


{% if step_introspect %}

## * Introspect hardware attributes of nodes.
## ::

    {% if release == 'mitaka' %}

        openstack baremetal introspection bulk start

    {% else %}

        # Note: Unlike the legacy bulk command, overcloud node
        # introspect will only run on nodes in the 'manageable'
        # provisioning state.
        for node in $(openstack baremetal node list --fields uuid -f value) ; do
            openstack baremetal node manage $node ;
        done
        openstack overcloud node introspect --all-manageable
        openstack overcloud node provide --all-manageable

    {% endif %}

{% endif %}


### --stop_docs
